Test run started at 20:07:00.31 on Mon 06/30/2025 
Optimizer: all 
======================================== 
 
test_extract_opponents (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_extract_opponents)
Test extracting opponents from game information. ... ok
test_filter_injured_players (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_filter_injured_players)
Test filtering injured players from the player pool. ... ok
test_find_injured_list (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_find_injured_list)
Test the find_injured_list function. ... ok
test_init (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_init)
Test the initialization of the AdvancedLineupOptimizer class. ... ok
test_lineup_diversity (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_lineup_diversity)
Test lineup diversity constraints. ... FAIL
test_max_players_from_team_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_max_players_from_team_constraint)
Test the maximum players from one team constraint. ... ERROR
test_min_salary_used_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_min_salary_used_constraint)
Test minimum salary used constraint. ... ERROR
test_optimize_basic_functionality (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_optimize_basic_functionality)
Test basic optimization functionality. ... FAIL
test_player_appearance_limit (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_player_appearance_limit)
Test limiting the number of times a player can appear across lineups. ... ok
test_team_stacking (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_team_stacking)
Test the team stacking functionality. ... FAIL
test_list_all_injury_files (test_injury_manager.TestInjuryManager.test_list_all_injury_files)
Test finding all injury files. ... FAIL
test_preview_injury_file (test_injury_manager.TestInjuryManager.test_preview_injury_file)
Test previewing injury file contents. ... FAIL
test_preview_injury_file_error (test_injury_manager.TestInjuryManager.test_preview_injury_file_error)
Test handling errors when previewing invalid files. ... ok
test_basic_to_advanced_optimizer_consistency (test_integration.TestMLBOptimizerIntegration.test_basic_to_advanced_optimizer_consistency)
Test that basic and advanced optimizers produce consistent results. ... FAIL
test_end_to_end_optimization (test_integration.TestMLBOptimizerIntegration.test_end_to_end_optimization)
Test the complete optimization workflow. ... FAIL
test_output_file_generation (test_integration.TestMLBOptimizerIntegration.test_output_file_generation)
Test that output files are generated correctly. ... ok
test_validated_optimizer_script (test_integration.TestMLBOptimizerIntegration.test_validated_optimizer_script)
Test the run_validated_optimizer script. ... ERROR
test_data_loading (test_optimizer.TestLineupOptimizer.test_data_loading)
Test that player data is loaded correctly. ... ok
test_extract_opponent (test_optimizer.TestLineupOptimizer.test_extract_opponent)
Test the _extract_opponent method. ... FAIL
test_init (test_optimizer.TestLineupOptimizer.test_init)
Test the initialization of the LineupOptimizer class. ... ok
test_multiple_lineups_diversity (test_optimizer.TestLineupOptimizer.test_multiple_lineups_diversity)
Test generating multiple lineups with diversity. ... FAIL
test_optimize_single_lineup (test_optimizer.TestLineupOptimizer.test_optimize_single_lineup)
Test generating a single optimized lineup. ... FAIL
test_salary_cap_constraint (test_optimizer.TestLineupOptimizer.test_salary_cap_constraint)
Test that the salary cap constraint is enforced. ... ok

======================================================================
ERROR: test_max_players_from_team_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_max_players_from_team_constraint)
Test the maximum players from one team constraint.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 170, in test_max_players_from_team_constraint
    for player in lineups[0]['players']:
                  ~~~~~~~^^^
IndexError: list index out of range

======================================================================
ERROR: test_min_salary_used_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_min_salary_used_constraint)
Test minimum salary used constraint.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 232, in test_min_salary_used_constraint
    self.assertGreaterEqual(lineups[0]['total_salary'], min_salary)
                            ~~~~~~~^^^
IndexError: list index out of range

======================================================================
ERROR: test_validated_optimizer_script (test_integration.TestMLBOptimizerIntegration.test_validated_optimizer_script)
Test the run_validated_optimizer script.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Python312\Lib\unittest\mock.py", line 1564, in __enter__
    setattr(self.target, self.attribute, new_attr)
AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 171, in test_validated_optimizer_script
    with patch('subprocess.run') as mock_run, \
  File "C:\Python312\Lib\unittest\mock.py", line 1577, in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\unittest\mock.py", line 1585, in __exit__
    delattr(self.target, self.attribute)
AttributeError: 'list' object attribute 'insert' is read-only

======================================================================
FAIL: test_lineup_diversity (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_lineup_diversity)
Test lineup diversity constraints.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 209, in test_lineup_diversity
    self.assertEqual(len(lineups), num_lineups)
AssertionError: 0 != 3

======================================================================
FAIL: test_optimize_basic_functionality (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_optimize_basic_functionality)
Test basic optimization functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 112, in test_optimize_basic_functionality
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_team_stacking (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_team_stacking)
Test the team stacking functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 148, in test_team_stacking
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_list_all_injury_files (test_injury_manager.TestInjuryManager.test_list_all_injury_files)
Test finding all injury files.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_injury_manager.py", line 70, in test_list_all_injury_files
    self.assertEqual(len(result), 1)
AssertionError: 16 != 1

======================================================================
FAIL: test_preview_injury_file (test_injury_manager.TestInjuryManager.test_preview_injury_file)
Test previewing injury file contents.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Python312\Lib\unittest\mock.py", line 1387, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_injury_manager.py", line 85, in test_preview_injury_file
    self.assertTrue("Preview of 'Player' column" in str(name_column_call))
AssertionError: False is not true

======================================================================
FAIL: test_basic_to_advanced_optimizer_consistency (test_integration.TestMLBOptimizerIntegration.test_basic_to_advanced_optimizer_consistency)
Test that basic and advanced optimizers produce consistent results.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 83, in test_basic_to_advanced_optimizer_consistency
    self.assertGreaterEqual(
AssertionError: np.float64(64.8) not greater than or equal to np.float64(75.0)

======================================================================
FAIL: test_end_to_end_optimization (test_integration.TestMLBOptimizerIntegration.test_end_to_end_optimization)
Test the complete optimization workflow.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 109, in test_end_to_end_optimization
    self.assertEqual(len(lineups), 5)
AssertionError: 0 != 5

======================================================================
FAIL: test_extract_opponent (test_optimizer.TestLineupOptimizer.test_extract_opponent)
Test the _extract_opponent method.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 138, in test_extract_opponent
    self.assertEqual(opponent, 'CHC')
AssertionError: 'Unknown' != 'CHC'
- Unknown
+ CHC


======================================================================
FAIL: test_multiple_lineups_diversity (test_optimizer.TestLineupOptimizer.test_multiple_lineups_diversity)
Test generating multiple lineups with diversity.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 116, in test_multiple_lineups_diversity
    self.assertEqual(len(lineups), num_lineups)
AssertionError: 0 != 3

======================================================================
FAIL: test_optimize_single_lineup (test_optimizer.TestLineupOptimizer.test_optimize_single_lineup)
Test generating a single optimized lineup.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 74, in test_optimize_single_lineup
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

----------------------------------------------------------------------
Ran 23 tests in 2.288s

FAILED (failures=10, errors=3)
Python version: 3.12.0 (tags/v3.12.0:0fb18b0, Oct  2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)]
Testing directory: C:\git\roster_opt
Date and time: 2025-06-30 20:07:03
----------------------------------------------------------------------

Discovering MLB optimizer tests...
Found 4 MLB test cases in C:\git\roster_opt\MLB_Optimizer\tests
MLB test files: test_advanced_optimizer.py, test_injury_manager.py, test_integration.py, test_optimizer.py

Discovering F1 optimizer tests...
Error discovering F1 tests: Path must be within the project
Make sure F1_Optimizer has all the required files.

Running tests...
Total test cases to run: 4
----------------------------------------------------------------------
Loading injured players from: test_injuries.csv
Injury file columns: ['Player', 'Team', 'Position', 'Status']
Using 'Player' as the player name column
Found 3 players on the injury list
Filtered out 3 injured players from the player pool.
Searching for injury list files in:
- C:\git\roster_opt
- C:\git
- C:\Users\galac\Downloads
- C:\git\data
  Found 1 matches for 'C:\git\roster_opt\mlb-injury*.csv'
  Found 1 matches for 'C:\git\roster_opt\*injury*.csv'
  Found 1 matches for 'C:\git\roster_opt\*injured*.csv'
  Found 1 matches for 'C:\git\roster_opt\*-IL-*.csv'
  Found 1 matches for 'C:\git\mlb-injury*.csv'
  Found 1 matches for 'C:\git\*injury*.csv'
  Found 1 matches for 'C:\git\*injured*.csv'
  Found 1 matches for 'C:\git\*-IL-*.csv'
  Found 1 matches for 'C:\Users\galac\Downloads\mlb-injury*.csv'
  Found 1 matches for 'C:\Users\galac\Downloads\*injury*.csv'
  Found 1 matches for 'C:\Users\galac\Downloads\*injured*.csv'
  Found 1 matches for 'C:\Users\galac\Downloads\*-IL-*.csv'
  Found 1 matches for 'C:\git\data\mlb-injury*.csv'
  Found 1 matches for 'C:\git\data\*injury*.csv'
  Found 1 matches for 'C:\git\data\*injured*.csv'
  Found 1 matches for 'C:\git\data\*-IL-*.csv'
Found 16 potential injury list files.
Most recent: test_injuries.csv
Last modified: 1751332023.5304534
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1
Loading injured players from: test_mlb_injuries.csv
Injury file columns: ['Player', 'Team', 'Position', 'Status']
Using 'Player' as the player name column
Found 5 players on the injury list
Filtered out 5 injured players from the player pool.
Could not find optimal solution for lineup 1

Lineups saved to C:\git\roster_opt\test_output\test_output_lineups.csv
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 2
Could not find optimal solution for lineup 3
Could not find optimal solution for lineup 1
Could not find optimal solution for lineup 1

Test Summary:
----------------------------------------------------------------------
Tests run: 23
Failures: 10
Errors: 3
Skipped: 0
Test duration: 2.29 seconds

Some tests FAILED.

Failure details:

1. test_lineup_diversity (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_lineup_diversity)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 209, in test_lineup_diversity
    self.assertEqual(len(lineups), num_lineups)
AssertionError: 0 != 3

----------------------------------------

2. test_optimize_basic_functionality (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_optimize_basic_functionality)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 112, in test_optimize_basic_functionality
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

----------------------------------------

3. test_team_stacking (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_team_stacking)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 148, in test_team_stacking
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

----------------------------------------

4. test_list_all_injury_files (test_injury_manager.TestInjuryManager.test_list_all_injury_files)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_injury_manager.py", line 70, in test_list_all_injury_files
    self.assertEqual(len(result), 1)
AssertionError: 16 != 1

----------------------------------------

5. test_preview_injury_file (test_injury_manager.TestInjuryManager.test_preview_injury_file)
----------------------------------------
Traceback (most recent call last):
  File "C:\Python312\Lib\unittest\mock.py", line 1387, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_injury_manager.py", line 85, in test_preview_injury_file
    self.assertTrue("Preview of 'Player' column" in str(name_column_call))
AssertionError: False is not true

----------------------------------------

6. test_basic_to_advanced_optimizer_consistency (test_integration.TestMLBOptimizerIntegration.test_basic_to_advanced_optimizer_consistency)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 83, in test_basic_to_advanced_optimizer_consistency
    self.assertGreaterEqual(
AssertionError: np.float64(64.8) not greater than or equal to np.float64(75.0)

----------------------------------------

7. test_end_to_end_optimization (test_integration.TestMLBOptimizerIntegration.test_end_to_end_optimization)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 109, in test_end_to_end_optimization
    self.assertEqual(len(lineups), 5)
AssertionError: 0 != 5

----------------------------------------

8. test_extract_opponent (test_optimizer.TestLineupOptimizer.test_extract_opponent)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 138, in test_extract_opponent
    self.assertEqual(opponent, 'CHC')
AssertionError: 'Unknown' != 'CHC'
- Unknown
+ CHC


----------------------------------------

9. test_multiple_lineups_diversity (test_optimizer.TestLineupOptimizer.test_multiple_lineups_diversity)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 116, in test_multiple_lineups_diversity
    self.assertEqual(len(lineups), num_lineups)
AssertionError: 0 != 3

----------------------------------------

10. test_optimize_single_lineup (test_optimizer.TestLineupOptimizer.test_optimize_single_lineup)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_optimizer.py", line 74, in test_optimize_single_lineup
    self.assertEqual(len(lineups), 1)
AssertionError: 0 != 1

----------------------------------------

Error details:

1. test_max_players_from_team_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_max_players_from_team_constraint)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 170, in test_max_players_from_team_constraint
    for player in lineups[0]['players']:
                  ~~~~~~~^^^
IndexError: list index out of range

----------------------------------------

2. test_min_salary_used_constraint (test_advanced_optimizer.TestAdvancedLineupOptimizer.test_min_salary_used_constraint)
----------------------------------------
Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_advanced_optimizer.py", line 232, in test_min_salary_used_constraint
    self.assertGreaterEqual(lineups[0]['total_salary'], min_salary)
                            ~~~~~~~^^^
IndexError: list index out of range

----------------------------------------

3. test_validated_optimizer_script (test_integration.TestMLBOptimizerIntegration.test_validated_optimizer_script)
----------------------------------------
Traceback (most recent call last):
  File "C:\Python312\Lib\unittest\mock.py", line 1564, in __enter__
    setattr(self.target, self.attribute, new_attr)
AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\git\roster_opt\MLB_Optimizer\tests\test_integration.py", line 171, in test_validated_optimizer_script
    with patch('subprocess.run') as mock_run, \
  File "C:\Python312\Lib\unittest\mock.py", line 1577, in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\unittest\mock.py", line 1585, in __exit__
    delattr(self.target, self.attribute)
AttributeError: 'list' object attribute 'insert' is read-only

----------------------------------------
 
Test run completed at 20:07:05.92 on Mon 06/30/2025 
======================================== 
Tests FAILED with errors. 
